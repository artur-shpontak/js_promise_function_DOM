{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","newPromise","Promise","resolve","addEventListener","handleEvent","nodeName","id","printMessage","message","newMessage","document","createElement","className","innerText","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAQjBC,OAPY,IAAIC,QAAQ,SAAAC,GAC7BJ,EAAQK,iBAAiBJ,EAAW,SAACK,GAEnCF,EAAkBH,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQO,SAAiBP,UAAAA,OAAAA,EAAQQ,GAAhF,UAON,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAaC,SAASC,cAAc,OAE1CF,EAAWG,UAAY,UACvBH,EAAWI,UAAYL,EAEvBE,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACfpB,QAAAA,EACAU,aAAAA","file":"main.d8849f18.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const newPromise = new Promise(resolve => {\n    element.addEventListener(eventName, (handleEvent) => {\n      // eslint-disable-next-line max-len\n      resolve(`It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n\n  return newPromise;\n}\n\nconst printMessage = (message) => {\n  const newMessage = document.createElement('div');\n\n  newMessage.className = 'message';\n  newMessage.innerText = message;\n\n  document.body.append(newMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}